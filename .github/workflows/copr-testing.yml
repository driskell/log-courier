name: COPR (Testing)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Ref
        required: true
      run_number:
        description: Run Number
        required: true
      serial:
        description: Serial Number
        required: true
  push:
    branches: [main]
    paths:
    - contrib
    - docs
    - 'lc-admin/**'
    - 'lc-lib/**'
    - 'lc-tlscert/**'
    - 'log-carver/**'
    - log-courier.go
    - go.mod
    - go.sum

# NOTE: To test this locally using `act`:
#       1. Remove the `with` from the first checkout so it can copy your local repository (otherwise you need a GITHUB_TOKEN as it will trigger action/checkout natively)
#       2. For the same reason as 1, remove the second checkout of main completely (you'll be copying in main anyway, right?)
#       3. Change the log-courier action `uses` path to a local one so it uses your latest changes instead of pulling the upstream version (e.g. `./.github/actions/xxx`)
#       4. Modify the entrypoint for the corresponding log-courier action so that it creates .main as a link to itself so it can function mostly unchanged (`ln -nsf . .main`)
jobs:
  release-log-courier:
    name: Release Log Courier
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        path: .main
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@main
      env:
        NAME: log-courier
        REF: ${{ (github.event.ref && github.event.inputs.ref) || github.ref }}
        VERSION: v${{ (github.event.inputs && github.event.inputs.run_number) || github.run_number }}${{ (github.event.inputs && github.event.inputs.serial) || '00' }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
        TARGET_REPO: log-courier2-testing
        SKIP_VERSION_CHECK: 1

  release-log-carver:
    name: Release Log Carver
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        path: .main
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@main
      env:
        NAME: log-carver
        REF: ${{ (github.event.ref && github.event.inputs.ref) || github.ref }}
        VERSION: v${{ (github.event.inputs && github.event.inputs.run_number) || github.run_number }}${{ (github.event.inputs && github.event.inputs.serial) || '00' }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
        TARGET_REPO: log-courier2-testing
        SKIP_VERSION_CHECK: 1

  release-lc-admin:
    name: Release Administration Utility
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        path: .main
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@main
      env:
        NAME: lc-admin
        REF: ${{ (github.event.ref && github.event.inputs.ref) || github.ref }}
        VERSION: v${{ (github.event.inputs && github.event.inputs.run_number) || github.run_number }}${{ (github.event.inputs && github.event.inputs.serial) || '00' }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
        TARGET_REPO: log-courier2-testing
        SKIP_VERSION_CHECK: 1

  release-lc-tlscert:
    name: Release SSL Certificate Utility
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        path: .main
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@main
      env:
        NAME: lc-tlscert
        REF: ${{ (github.event.ref && github.event.inputs.ref) || github.ref }}
        VERSION: v${{ (github.event.inputs && github.event.inputs.run_number) || github.run_number }}${{ (github.event.inputs && github.event.inputs.serial) || '00' }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
        TARGET_REPO: log-courier2-testing
        SKIP_VERSION_CHECK: 1
