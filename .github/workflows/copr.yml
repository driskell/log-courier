name: COPR

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag
        required: true
  release:
    types: [published]

# NOTE: To test this locally using `act`:
#       1. Remove the `with` from the first checkout so it can copy your local repository (otherwise you need a GITHUB_TOKEN as it will trigger action/checkout natively)
#       2. For the same reason as 1, remove the second checkout of master completely (you'll be copying in master anyway, right?)
#       3. Change the log-courier action `uses` path to a local one so it uses your latest changes instead of pulling the upstream version (e.g. `./.github/actions/xxx`)
#       4. Modify the entrypoint for the corresponding log-courier action so that it creates .master as a link to itself so it can function mostly unchanged (`ln -nsf . .master`)
jobs:
  release-log-courier:
    name: Release Log Courier
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
        path: .master
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@master
      env:
        NAME: log-courier
        REF: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
        VERSION: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
        TARGET_REPO: log-courier2

  release-log-carver:
    name: Release Log Carver
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
        path: .master
    - name: Build and Submit
      uses: driskell/log-courier/.github/actions/rpm@master
      env:
        NAME: log-carver
        REF: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
        VERSION: ${{ (github.event.inputs && github.event.inputs.tag) || github.ref }}
        COPR_CLI: ${{ secrets.COPR_CLI }}
        GNU_PG: ${{ secrets.GNU_PG }}
